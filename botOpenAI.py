import telebot
import sqlite3
from telebot import types
from telegram import ParseMode
import datetime
import urllib.request
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram import ReplyKeyboardMarkup, KeyboardButton
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
import os
import openai
from telebot import TeleBot
import urllib.request
import time
import json
CHAT_ID = 628446966
TELEGRAM_API_KEY = '5428270852:AAEbBDt8RiYgiizDEC7o5oTz4vl-x7Ls5ng'
OPENAI_API_KEY = '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'
bot = telebot.TeleBot(TELEGRAM_API_KEY)







def get_user_data(user_id):
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()
    cursor.execute(f"SELECT grypa, email, first_last FROM login_id WHERE id = {user_id}")
    data = cursor.fetchone()
    connect.close()
    return data


# –ó–ë–ï–†–ï–ñ–ï–ù–ù–Ø –§–û–¢–û –ó –î–ó –£ –ë–ê–ó–£ –î–ê–ù–ù–ò–•

@bot.message_handler(commands=['start'])
def start(message: types.Message):
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()

    cursor.execute("""CREATE TABLE IF NOT EXISTS login_id(
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT,
            email TEXT NOT NULL,
            grypa TEXT NOT NULL,
            first_last TEXT NOT NULL,
            roli TEXT )""")

    connect.commit()
    people_id = message.chat.id
    cursor.execute(f"SELECT id FROM login_id WHERE id = {people_id} ")
    data = cursor.fetchone()
    if data is None:

        # –ó–∞–ø–∏—Ç email
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Å–≤–æ—é email –∞–¥—Ä–µ—Å—É:")
        bot.register_next_step_handler(message, get_email)

    else:
        bot.send_message(message.chat.id, "–¢–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π!")
        message_handler_start(message)

def get_email(message: types.Message):
    email = message.text
    email = email.lower()
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()
    cursor.execute("SELECT email FROM login_id")
    rows = cursor.fetchall()
    emails = [row[0] for row in rows]  # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑—ñ –∑–Ω–∞—á–µ–Ω—å email

    if email in emails:
        bot.send_message(message.chat.id, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞ —Ç–∞–∫–æ—é –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—é –∞–¥—Ä–µ—Å–æ—é –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π –≤–≤–µ–¥—ñ—Ç—å –±—É–¥—å –ª–∞—Å–∫–∞ —Å–≤–æ—é –∞–¥—Ä–µ—Å—É")
        bot.register_next_step_handler(message, get_email)

    elif email.startswith('/'):
        bot.send_message(message.chat.id, "–í–∏ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É –∞ –Ω–µ –ø–æ—à—Ç—É –±—É–¥—å –ª–∞—Å–∫–∞ –≤–≤–µ–¥—ñ—Ç—å —Å–≤–æ—é —Ñ—ñ–∑–º–∞—Ç—ñ–≤—Å—å–∫—É –ø–æ—à—Ç—É: ")
        bot.register_next_step_handler(message, get_email)

    else:
        conn = sqlite3.connect('users.db')
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM Email_Base WHERE Email_Address=?", (email,))
        row = cursor.fetchone()
        if row:
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button_student = types.KeyboardButton("–°—Ç—É–¥–µ–Ω—Ç")
            button_starosta = types.KeyboardButton("–°—Ç–∞—Ä–æ—Å—Ç–∞")
            button_vikladach = types.KeyboardButton("–í–∏–∫–ª–∞–¥–∞—á")
            keyboard.add(button_student, button_starosta, button_vikladach)
            bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—à—É —Ä–æ–ª—å:", reply_markup=keyboard)
            bot.register_next_step_handler(message, get_role, email)


        else:
            # Email does not exist, send error message
            bot.send_message(message.chat.id,"–í–∞—à–æ—ó –ø–æ—à—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —Ñ—ñ–∑–º–∞—Ç—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Å–≤–æ—é –ø–æ—à—Ç—É —â–µ —Ä–∞–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.")
            # Return to the get_email function to wait for the next input from the user
            bot.register_next_step_handler(message, get_email)
        cursor.close()
        conn.close()



def get_role(message, email):
    role = message.text

    if role.startswith('/'):
        bot.send_message(message.chat.id,"–í–∏ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É, –∞ –Ω–µ —Ä–æ–ª—å")
        bot.register_next_step_handler(message, get_role, email)

    elif role == '–°—Ç—É–¥–µ–Ω—Ç':
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–°–û–§–Ü-11')
        item2 = types.KeyboardButton('–°–û–§–ê-12')
        item3 = types.KeyboardButton('–°–û–ú–Ü-13')
        item4 = types.KeyboardButton('–ö–ú-14')
        item5 = types.KeyboardButton('–°–û–Ü–ú-15')
        item6 = types.KeyboardButton('–Ü–Ü–ü-16')
        item7 = types.KeyboardButton('DA-17')
        item8 = types.KeyboardButton('–°–û–§–Ü-21')
        item9 = types.KeyboardButton('–°–û–ú–Ü-22')
        item10 = types.KeyboardButton('–°–û–Ü–ú-23')
        item11 = types.KeyboardButton('–°–û–§–ê-25')
        item12 = types.KeyboardButton('–ö–ù-26')
        item13 = types.KeyboardButton('–ö–ù-27')
        item14 = types.KeyboardButton('–°–û–§–Ü-31')
        item15 = types.KeyboardButton('–°–û–ú–Ü-32')
        item16 = types.KeyboardButton('–°–û–Ü–ú-33')
        item17 = types.KeyboardButton('–°–û–§–ê-35')
        item18 = types.KeyboardButton('–ö–ù-36')
        item19 = types.KeyboardButton('–°–û–§–Ü-41')
        item20 = types.KeyboardButton('–°–û–ú–Ü-42')
        item21 = types.KeyboardButton('–°–ûIM-43')
        item22 = types.KeyboardButton('–°–û–Ü–Ω—Å–∫-24')
        item23 = types.KeyboardButton('–º–°–û–§-11')
        item24 = types.KeyboardButton('–º–°–û–ú-12')
        item25 = types.KeyboardButton('–º–°–û–Ü–Ω-13')
        item26 = types.KeyboardButton('–º–°–û–§-21')
        item27 = types.KeyboardButton('–º–°–û–ú-22')
        item28 = types.KeyboardButton('–º–°–û–Ü–Ω-23')
        keyboard.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13,
                     item14, item15, item16, item17, item18, item19, item20, item21, item22, item23, item24,
                     item25, item26, item27, item28)
        bot.send_message(message.chat.id,
                         "–ë—É–¥—å –ª–∞—Å–∫–∞, –±—É–¥—å—Ç–µ —É–≤–∞–∂–Ω—ñ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ —Å–≤–æ—î—ó –≥—Ä—É–ø–∏. –û–±–µ—Ä—ñ—Ç—å –¥—ñ–π—Å–Ω—É –≥—Ä—É–ø—É, –æ—Å–∫—ñ–ª—å–∫–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≥—Ä—É–ø–∏ –Ω–µ –±—É–¥–µ –º–æ–∂–ª–∏–≤–∏–º. –Ø–∫—â–æ –ø–æ–º–∏–ª–∏–ª–∏—Å—è –∑ –≤–∏–±–æ—Ä–æ–º –≥—Ä—É–ø–∏ –Ω–∞–ø–∏—à—ñ—Ç—å –≤ /support",
                         reply_markup=keyboard)
        bot.register_next_step_handler(message, get_group_stud, email,role)





    elif role == '–í–∏–∫–ª–∞–¥–∞—á':
        # –ó–∞–ø–∏—Ç –ø–∞—Ä–æ–ª—é –¥–ª—è —Ä–æ–ª—ñ –≤–∏–∫–ª–∞–¥–∞—á–∞
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –≤–∏–∫–ª–∞–¥–∞—á–∞:")
        bot.register_next_step_handler(message, get_password,  role, email)

    elif role == '–°—Ç–∞—Ä–æ—Å—Ç–∞':
        # –ó–∞–ø–∏—Ç –ø–∞—Ä–æ–ª—é –¥–ª—è —Ä–æ–ª—ñ —Å—Ç–∞—Ä–æ—Å—Ç–∏
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è —Å—Ç–∞—Ä–æ—Å—Ç–∏:")
        bot.register_next_step_handler(message, get_password, role, email )

    else:
        # –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä —Ä–æ–ª—ñ
        bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–ª—å –∑ –Ω–∞–¥–∞–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫.")
        bot.register_next_step_handler(message, get_role, email)


def get_password(message, role, email):
    password = message.text

    if role == '–í–∏–∫–ª–∞–¥–∞—á' and password == '000':
        board = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞üìè')
        item2 = types.KeyboardButton('–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞üßë‚Äçüíª')
        item3 = types.KeyboardButton('–§—ñ–∑–∏–∫–∞üë®‚Äçüî¨')
        board.add(item1, item2, item3)
        bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å —ñ–∑ —è–∫–æ—ó –≤–∏ –∫–∞—Ñ–µ–¥—Ä–∏:", reply_markup=board)
        bot.register_next_step_handler(message, kafedra, email, role)

    elif role == '–°—Ç–∞—Ä–æ—Å—Ç–∞' and password == '111':
        # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–ª—ñ —Å—Ç–∞—Ä–æ—Å—Ç–∏ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö


        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–°–û–§–Ü-11')
        item2 = types.KeyboardButton('–°–û–§–ê-12')
        item3 = types.KeyboardButton('–°–û–ú–Ü-13')
        item4 = types.KeyboardButton('–ö–ú-14')
        item5 = types.KeyboardButton('–°–û–Ü–ú-15')
        item6 = types.KeyboardButton('–Ü–Ü–ü-16')
        item7 = types.KeyboardButton('DA-17')
        item8 = types.KeyboardButton('–°–û–§–Ü-21')
        item9 = types.KeyboardButton('–°–û–ú–Ü-22')
        item10 = types.KeyboardButton('–°–û–Ü–ú-23')
        item11 = types.KeyboardButton('–°–û–§–ê-25')
        item12 = types.KeyboardButton('–ö–ù-26')
        item13 = types.KeyboardButton('–ö–ù-27')
        item14 = types.KeyboardButton('–°–û–§–Ü-31')
        item15 = types.KeyboardButton('–°–û–ú–Ü-32')
        item16 = types.KeyboardButton('–°–û–Ü–ú-33')
        item17 = types.KeyboardButton('–°–û–§–ê-35')
        item18 = types.KeyboardButton('–ö–ù-36')
        item19 = types.KeyboardButton('–°–û–§–Ü-41')
        item20 = types.KeyboardButton('–°–û–ú–Ü-42')
        item21 = types.KeyboardButton('–°–ûIM-43')
        item22 = types.KeyboardButton('–°–û–Ü–Ω—Å–∫-24')
        item23 = types.KeyboardButton('–º–°–û–§-11')
        item24 = types.KeyboardButton('–º–°–û–ú-12')
        item25 = types.KeyboardButton('–º–°–û–Ü–Ω-13')
        item26 = types.KeyboardButton('–º–°–û–§-21')
        item27 = types.KeyboardButton('–º–°–û–ú-22')
        item28 = types.KeyboardButton('–º–°–û–Ü–Ω-23')
        keyboard.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13,
                     item14, item15, item16, item17, item18, item19, item20, item21, item22, item23, item24,
                     item25, item26, item27, item28)
        bot.send_message(message.chat.id,
                         "–ë—É–¥—å –ª–∞—Å–∫–∞, –±—É–¥—å—Ç–µ —É–≤–∞–∂–Ω—ñ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ —Å–≤–æ—î—ó –≥—Ä—É–ø–∏. –û–±–µ—Ä—ñ—Ç—å –¥—ñ–π—Å–Ω—É –≥—Ä—É–ø—É, –æ—Å–∫—ñ–ª—å–∫–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≥—Ä—É–ø–∏ –Ω–µ –±—É–¥–µ –º–æ–∂–ª–∏–≤–∏–º. –Ø–∫—â–æ –ø–æ–º–∏–ª–∏–ª–∏—Å—è –∑ –≤–∏–±–æ—Ä–æ–º –≥—Ä—É–ø–∏ –Ω–∞–ø–∏—à—ñ—Ç—å –≤ /support",
                         reply_markup=keyboard)
        bot.register_next_step_handler(message, get_group_stud, email, role)




    else:
        # –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
        bot.register_next_step_handler(message, get_password, role, email)

def kafedra(message, email, role):
    group = message.text
    if group not in ['–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞üìè', '–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞üßë‚Äçüíª', '–§—ñ–∑–∏–∫–∞üë®‚Äçüî¨']:
        bot.send_message(message.chat.id, "–í–∏ —â–æ –∑ —Ö—ñ–º–±—ñ–æ?ü§®")
        bot.register_next_step_handler(message, kafedra, message, email, role)

    elif group.startswith('/'):
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞ –±—É–¥—å—Ç–µ —É–≤–∞–∂–Ω—ñ—à—ñ –≤–∏ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É, –∞ –Ω–µ –Ω–∞–∑–≤—É –∫–∞—Ñ–µ–¥—Ä–∏, –±—É–¥—å –ª–∞—Å–∫–∞ –≤–≤–µ–¥—ñ—Ç—å —Å–≤–æ—é –∫–∞—Ñ–µ–¥—Ä—Éüò° ")
        bot.register_next_step_handler(message, kafedra, email, role)
    else:
        bot.send_message(message.chat.id, '–ë—É–¥—å –ª–∞—Å–∫–∞ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤–æ—î –ø–æ–≤–Ω–µ –ø—Ä—ñ–∑–≤–∏—â–µ —ñ–º\'—è –ø–æ-–±–∞—Ç—å–∫–æ–≤—ñ')
        if group == '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞üìè':
            group = "–ú–∞—Ç–µ–º–∞—Ç–∏–∫"
        elif group == '–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞üßë‚Äçüíª':
            group = '–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫'
        elif group == '–§—ñ–∑–∏–∫–∞üë®‚Äçüî¨':
            group = '–§—ñ–∑–∏–∫'
        bot.register_next_step_handler(message, get_first_last, email, role, group)

def get_group_stud(message,email,role):
    group = message.text
    if group not in ['–°–û–ú–Ü-32', '–°–û–Ü–ú-33', '–°–û–§–ê-35', '–ö–ù-36', '–º–°–û–§-11', '–º–°–û–ú-12', '–°–û–§–Ü-41', '–°–û–ú–Ü-42', '–°–ûIM-43',
                     '–°–û–Ü–Ω—Å–∫-24', '–º–°–û–Ü–Ω-13', '–ö–ú-14', '–°–û–Ü–ú-15', '–Ü–Ü–ü-16', 'DA-17', '–°–û–§–Ü-21', '–°–û–§–Ü-21', '–°–û–ú–Ü-22',
                     '–ö–ù-26',
                     '–ö–ù-27', '–°–û–§–Ü-31', '–°–û–Ü–ú-23', '–°–û–§–ê-25', '–°–û–§–Ü-11', '–°–û–§–ê-12', '–°–û–ú–Ü-13', '–º–°–û–§-21', '–º–°–û–ú-22',
                     '–º–°–û–Ü–Ω-23']:
        bot.send_message(message.chat.id, "–í–∏ –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É –≥—Ä—É–ø—É –≤–∏–±–µ—Ä—ñ—Ç—å —â–µ —Ä–∞–∑ —Å–≤–æ—é –≥—Ä—É–ø—É:")
        bot.register_next_step_handler(message, get_group_stud, email, role)
    elif group.startswith('/'):
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞ –±—É–¥—å—Ç–µ —É–≤–∞–∂–Ω—ñ—à—ñ –≤–∏ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É –∞ –Ω–µ –Ω–∞–∑–≤—É –≥—Ä—É–ø–∏, –±—É–¥—å –ª–∞—Å–∫–∞ –≤–≤–µ–¥—ñ—Ç—å —Å–≤–æ—é –≥—Ä—É–ø—Éüò° ")
        bot.register_next_step_handler(message, get_group_stud, email,role)
    else:
        group = message.text.upper().replace('-', '_')
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î –ü–Ü–ë:")
        bot.register_next_step_handler(message, get_first_last, email, role, group)


def get_first_last(message, email, role, group):
    first_last = message.text
    role = role.lower()
    email = email.lower()

    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()

    user_id = message.chat.id
    user_name = message.chat.username

    # –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
    cursor.execute("INSERT INTO login_id (id, username, email, grypa, first_last, roli) VALUES(?, ?, ?, ?, ?, ?);",
                   (user_id, user_name, email, group, first_last, role))
    connect.commit()
    bot.send_message(message.chat.id, "–£—Å–ø—ñ—à–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è")
    create_rozklad_table(message)

def create_rozklad_table(message):
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –≥—Ä—É–ø –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    groups = ['–°–û–ú–Ü-32', '–°–û–Ü–ú-33', '–°–û–§–ê-35', '–ö–ù-36', '–º–°–û–§-11', '–º–°–û–ú-12', '–°–û–§–Ü-41', '–°–û–ú–Ü-42', '–°–ûIM-43',
              '–°–û–Ü–Ω—Å–∫-24', '–º–°–û–Ü–Ω-13', '–ö–ú-14', '–°–û–Ü–ú-15', '–Ü–Ü–ü-16', 'DA-17', '–°–û–§–Ü-21', '–°–û–§–Ü-21', '–°–û–ú–Ü-22',
              '–ö–ù-26', '–ö–ù-27', '–°–û–§–Ü-31', '–°–û–Ü–ú-23', '–°–û–§–ê-25', '–°–û–§–Ü-11', '–°–û–§–ê-12', '–°–û–ú–Ü-13', '–º–°–û–§-21', '–º–°–û–ú-22',
              '–º–°–û–Ü–Ω-23']

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å –¥–ª—è –∫–æ–∂–Ω–æ—ó –≥—Ä—É–ø–∏
    for group in groups:
        table_name = f"rosklad_{group.replace('-', '_')}"
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ç–∞–±–ª–∏—Ü—ñ
        cursor.execute(f"SELECT COUNT(*) FROM sqlite_master WHERE type='table' AND name='{table_name}'")
        result = cursor.fetchone()
        if result[0] == 0:
            # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ, —è–∫—â–æ –≤–æ–Ω–∞ –Ω–µ —ñ—Å–Ω—É—î
            cursor.execute(
                f"CREATE TABLE {table_name} (–ü–µ—Ä—à–∞ TEXT, –¥—Ä—É–≥–∞ TEXT, —Ç—Ä–µ—Ç—è TEXT, —á–µ—Ç–≤–µ—Ä—Ç–∞ TEXT, –ø—è—Ç–∞ TEXT)")
            # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è "–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞" —É –≤—Å—ñ —Å—Ç–æ–≤–ø—Ü—ñ —Ç–∞–±–ª–∏—Ü—ñ
            cursor.execute(
                f"INSERT INTO {table_name} (–ü–µ—Ä—à–∞, –¥—Ä—É–≥–∞, —Ç—Ä–µ—Ç—è, —á–µ—Ç–≤–µ—Ä—Ç–∞, –ø—è—Ç–∞) VALUES ('–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞')")
            cursor.execute(
                f"INSERT INTO {table_name} (–ü–µ—Ä—à–∞, –¥—Ä—É–≥–∞, —Ç—Ä–µ—Ç—è, —á–µ—Ç–≤–µ—Ä—Ç–∞, –ø—è—Ç–∞) VALUES ('–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞')")
            cursor.execute(
                f"INSERT INTO {table_name} (–ü–µ—Ä—à–∞, –¥—Ä—É–≥–∞, —Ç—Ä–µ—Ç—è, —á–µ—Ç–≤–µ—Ä—Ç–∞, –ø—è—Ç–∞) VALUES ('–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞')")
            cursor.execute(
                f"INSERT INTO {table_name} (–ü–µ—Ä—à–∞, –¥—Ä—É–≥–∞, —Ç—Ä–µ—Ç—è, —á–µ—Ç–≤–µ—Ä—Ç–∞, –ø—è—Ç–∞) VALUES ('–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞', '–ø–∞—Ä–∞ —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞')")

    connect.commit()  # –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –∑–º—ñ–Ω–∏ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    cursor.close()
    connect.close()
    message_handler_start(message)






###############################################################################################################################################################################





@bot.message_handler(commands=['shurik'])
def shurik(message):
    bot.send_message(message.chat.id, "–ü–æ–º—ñ–¥–æ—Ä –≤–∞—à–µ –ø—î—Ä—Å—ñ–∫, –º–∞–º–æ—é —Ç–≤–æ—î—é –∫–ª—è–Ω—É—Å—å".format(message.from_user))


@bot.message_handler(commands=['legion'])
def legion(message):
    bot.send_message(message.chat.id, "–ø—à—à –ø—à—à –ø—à—à –û–ª–µ–≥ –ø—É–∫–Ω—É–≤\n—Ü–µ –û–ª–µ–≥ @phantomkahueta ".format(message.from_user))

#####################################################################################################################




######################################################################################################################


@bot.message_handler(commands=['homework'])
def check_starost(message):
    user_id = message.from_user.id
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute(f"SELECT roli FROM login_id WHERE id = {user_id}")
    user_rol = cursor.fetchone()
    if user_rol:
        user_rol = user_rol[0]
        if user_rol == '—Å—Ç–∞—Ä–æ—Å—Ç–∞':
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item7 = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
            keyboard.add(item7)
            bot.send_message(message.chat.id, "–ù–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ –ø—Ä–µ–¥–º–µ—Ç –∑ —è–∫–æ–≥–æ –≤–∞–º –∑–∞–¥–∞–ª–∏ –¥–æ—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è: ", reply_markup=keyboard)
            bot.register_next_step_handler(message, homework_subject)
        else:
            bot.send_message(message.chat.id, "–í–∏ –Ω–µ —î —Å—Ç–∞—Ä–æ—Å—Ç–æ—é, –≤–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –¥–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è")
            message_handler_start(message)
    else:
        bot.send_message(message.chat.id, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö")
        message_handler_start(message)
def homework_subject(message: types.Message):
    subject = message.text
    if message.text == 'üîô –ù–∞–∑–∞–¥':
        # –í–∏–∫–ª–∏–∫ –∫–æ–º–∞–Ω–¥–∏ "/start" –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ "üîô –ù–∞–∑–∞–¥"
        bot.send_message(message.chat.id, '–ü–æ–≤–µ—Ä—Ç–∞—é—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é...')
        message_handler_start(message)
    else:
        bot.send_message(message.chat.id,'–ë—É–¥—å –ª–∞—Å–∫–∞, –∫–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—à—ñ—Ç—å, —è–∫—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –≤–∞–º –∑–∞–¥–∞–Ω—ñ —É —Ü—å–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—ñ:')
        bot.register_next_step_handler(message, save_homework, subject)
def save_homework(message: types.Message, subject):
    text_work = message.text
    user_id = message.from_user.id
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute(f"SELECT grypa FROM login_id WHERE id = {user_id}")
    user_grypa = cursor.fetchone()[0]
    # –≤—Å—Ç–∞–≤–ª—è—î–º–æ –Ω–æ–≤–∏–π –∑–∞–ø–∏—Å –¥–æ —Ç–∞–±–ª–∏—Ü—ñ –∑ –Ω–∞–∑–≤–æ—é, —â–æ –º—ñ—Å—Ç–∏—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π user_grypa
    insert_query = f"INSERT INTO {user_grypa} (subject, text) VALUES (?, ?)"
    cursor.execute(insert_query, (subject, text_work))
    conn.commit()
    bot.send_message(message.chat.id, "‚úÖ –î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ —Ç–∞ —Ä–æ–∑—ñ—Å–ª–∞–Ω–æ –≤–∞—à–∏–º –æ–¥–Ω–æ–≥—Ä—É–ø–Ω–∏–∫–∞–º!")
    save_studend_text(message, subject, text_work)
def save_studend_text(message, subject, text_work):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    chat_id = message.chat.id
    cursor.execute(f"SELECT grypa FROM login_id WHERE id = {chat_id}")
    user_group = cursor.fetchone()[0]
    cursor.execute(f"SELECT id FROM login_id WHERE grypa = '{user_group}'")
    rows = cursor.fetchall()
    for row in rows:
        user_id = row[0]
        insert_query =  f"INSERT INTO table_{user_id} (subject, text) VALUES (?, ?)"
        cursor.execute(insert_query, (subject, text_work))
    conn.commit()
    conn.close()




########################################################################################################################






@bot.message_handler(commands=['delete'])
def delete(message):
    # –∑–∞–ø–∏—Ç—É—î–º–æ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–π–¥—ñ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    chat_id = message.chat.id
    if chat_id != CHAT_ID:
        bot.send_message(chat_id=chat_id, text='–í–∏ –Ω–µ –º–∞—î—Ç–µ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.')
        return
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –∞–π–¥—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ")
        bot.register_next_step_handler(message, handle_user_id)
def handle_user_id(message):
    # –û—Ç—Ä–∏–º—É—î–º–æ –≤–≤–µ–¥–µ–Ω–µ –∞–π–¥—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_id = message.text

    # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    delete_user(user_id)

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    bot.send_message(message.chat.id, f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ –∞–π–¥—ñ {user_id} –≤–∏–¥–∞–ª–µ–Ω–∏–π.")

def delete_user(user_id):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    # –í–∏–¥–∞–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    cursor.execute("DELETE FROM login_id WHERE id=?", (user_id,))
    conn.commit()
##############################################

    ##########################################################################################################################

@bot.message_handler(commands=['support'])
def message_handler_support(message):
    # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –±–æ—Ç–∞ –∑ –∫–Ω–æ–ø–∫–æ—é "üîô–ù–∞–∑–∞–¥"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item_back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
    markup.add(item_back)
    bot.send_message(chat_id=message.chat.id,
                     text='<b>–î–æ–±—Ä–æ–≥–æ –¥–Ω—è, –±—É–¥—å –ª–∞—Å–∫–∞ –æ–ø–∏—à—ñ—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ –∑ —è–∫–∏–º–∏ —Ç—Ä—É–¥–Ω–æ—â–∞–º–∏ –≤–∏ –∑—ñ—Ç–∫–Ω—É–ª–∏—Å—è?</b>',
                     parse_mode=ParseMode.HTML, reply_markup=markup)
    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É –∑ –æ–±—Ä–æ–±–Ω–∏–∫–æ–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    bot.register_next_step_handler(message, support_reply_handler)


def support_reply_handler(message):
    if message.text == 'üîô–ù–∞–∑–∞–¥':
        # –í–∏–∫–ª–∏–∫ –∫–æ–º–∞–Ω–¥–∏ "/start" –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ "üîô–ù–∞–∑–∞–¥"
        message_handler_start(message)
    else:
        # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏
        bot.send_message(chat_id=628446966,
                         text=f'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–≤–µ—Ä–Ω—É–≤—Å—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é:\n–ê–π–¥—ñ: {message.chat.id}\n–ù—ñ–∫: @{message.chat.username}\n–¢–µ–∫—Å—Ç: {message.text}')
        bot.send_message(chat_id=message.chat.id,
                         text='–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è! –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –∑–≤\'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.')

#################################################################################################
@bot.message_handler(commands=['idea'])
def message_handler_idea(message):
    # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –±–æ—Ç–∞ –∑ –∫–Ω–æ–ø–∫–æ—é "üîô–ù–∞–∑–∞–¥"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item_back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
    markup.add(item_back)
    bot.send_message(chat_id=message.chat.id,
                     text='<b>–Ø–∫–∞ —É –≤–∞—Å —î —ñ–¥–µ—è –¥–ª—è –º–µ–Ω–µ? –ù–∞–ø–∏—à—ñ—Ç—å —ó—ó, —ñ –º–∏ —Ä–æ–∑–≥–ª—è–Ω–µ–º–æ —ó—ó —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É.</b>',
                     parse_mode=ParseMode.HTML, reply_markup=markup)
    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É –∑ –æ–±—Ä–æ–±–Ω–∏–∫–æ–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    bot.register_next_step_handler(message, idea_reply_handler)


def idea_reply_handler(message):
    if message.text == 'üîô–ù–∞–∑–∞–¥':
        # –í–∏–∫–ª–∏–∫ –∫–æ–º–∞–Ω–¥–∏ "/start" –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ "üîô–ù–∞–∑–∞–¥"
        message_handler_start(message)
    else:
        # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —ñ–¥–µ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
        bot.send_message(chat_id=628446966,
                         text=f'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞–≤ —ñ–¥–µ—é –¥–ª—è –±–æ—Ç–∞:\n–ê–π–¥—ñ: {message.chat.id}\n–ù—ñ–∫: @{message.chat.username}\n–¢–µ–∫—Å—Ç: {message.text}')
        bot.send_message(chat_id=message.chat.id,
                         text='–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—É —ñ–¥–µ—é! –ú–∏ —Ä–æ–∑–≥–ª—è–Ω–µ–º–æ —ó—ó –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É.')

#################################################################################################
@bot.message_handler(commands=['userhelp'])
def send_help(message):
    # –∑–∞–ø–∏—Ç—É—î–º–æ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–π–¥—ñ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    uhat_id = message.chat.id
    if uhat_id != CHAT_ID:
        bot.send_message(chat_id=uhat_id, text='–í–∏ –Ω–µ –º–∞—î—Ç–µ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.')
        return
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –∞–π–¥—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ")
        bot.register_next_step_handler(message, get_recipient_id)


def get_recipient_id(message):
    # –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –∞–π–¥—ñ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –∑–∞–ø–∏—Ç—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    recipient_id = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")
    bot.register_next_step_handler(message, send_message, recipient_id)


def send_message(message, recipient_id):
    # –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–≤–µ–¥–µ–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –≤–≤–µ–¥–µ–Ω–∏–º –∞–π–¥—ñ
    try:
        bot.send_message(recipient_id, message.text)
        bot.send_message(message.chat.id, "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!")
    except Exception as e:
        bot.send_message(message.chat.id, f"–ü–æ–º–∏–ª–∫–∞: {str(e)}")


#############################################################################################

@bot.message_handler(content_types=['voice', 'video_note'])
def handle_message(message):
    channel_id = '-1001955388901'
    if message.voice:
        # –û—Ç—Ä–∏–º–∞–Ω–æ –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        bot.forward_message(chat_id=channel_id, from_chat_id=message.chat.id, message_id=message.message_id)
    elif message.video_note:
        # –û—Ç—Ä–∏–º–∞–Ω–æ –∫—Ä—É–∂–µ—á–æ–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        bot.forward_message(chat_id=channel_id, from_chat_id=message.chat.id, message_id=message.message_id)



@bot.message_handler(commands=['news'])
def send_news(message):
    # –ó–∞–ø–∏—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–æ–∑—ñ—Å–ª–∞—Ç–∏
    bot.send_message(chat_id=message.chat.id, text='–í–≤–µ–¥—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏:')
    bot.register_next_step_handler(message, news_handler)
def news_handler(message):
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ —Ä–æ–∑—Å–∏–ª–∫–∞ –π–æ–≥–æ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º –±–æ—Ç–∞
    news = message.text
    users = get_all_users()  # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –±–æ—Ç–∞
    blocked_users = []
    for user in users:
        try:
            bot.send_message(chat_id=user, text=news)
        except telebot.apihelper.ApiTelegramException as e:
            if e.result.status_code == 403:
                blocked_users.append(user)
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ
    if blocked_users:
        # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        blocked_users_text = '\n'.join([str(user) for user in blocked_users])
        error_message = f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ {blocked_users_text} –∑–∞–±–ª–æ–∫—É–≤–∞–ª–∏ –±–æ—Ç–∞."
        # –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞
        bot.send_message(chat_id=CHAT_ID, text=error_message)
def get_all_users():
    # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —Ç–∞–±–ª–∏—Ü—ñ login_id
    cursor.execute("SELECT id FROM login_id")
    users = cursor.fetchall()
    # –ó–∞–∫—Ä–∏—Ç—Ç—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    cursor.close()
    conn.close()
    # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    return [user[0] for user in users]


def menu_starostam(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥')
    item2 = types.KeyboardButton('–†–æ–±–æ—Ç–∞ –∑ –∂—É—Ä–Ω–∞–ª–æ–º')
    homework = types.KeyboardButton('–î–æ–¥–∞—Ç–∏ –¥–æ–º–∞—à–∫—É')
    item4 = types.KeyboardButton('–û–≥–æ–ª–æ—à–µ–Ω–Ω—è –¥–ª—è –≥—Ä—É–ø–∏')
    back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')

    markup.add(back)
    markup.add(item1)
    markup.add(item2)
    markup.add(homework)
    markup.add(item4)
    bot.send_message(message.chat.id, "–¶–µ –º–µ–Ω—é –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è —Å—Ç–∞—Ä–æ—Å—Ç, —ñ –≤–∏ –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑—ñ —Å–ø–∏—Å–∫–æ–º –º–∞–π–±—É—Ç–Ω—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π, —è–∫—ñ –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñüòå".format(message.from_user), reply_markup=markup)




@bot.message_handler(commands=['menu'])
def message_handler_start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üìú–ü—Ä–æ—Ñ—ñ–ª—å')
    item2 = types.KeyboardButton('‚úçÔ∏è–†–æ–∑–∫–ª–∞–¥ –ø–∞—Ä')
    item3 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç–∏ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤')
    item4 = types.KeyboardButton('–°—Ç–∞—Ä–æ—Å—Ç–∞–º')
    item5 = types.KeyboardButton('–î–æ–º–∞—à–∫–∞')
    item_menu = types.KeyboardButton('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤')
    item5_6 = types.KeyboardButton('–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –ø—Ä–æ–µ–∫—Ç—É')
    markup.add(item1, item2, item3, item4, item5)
    markup.add(item_menu)
    markup.add(item5_6)
    bot.send_message(message.chat.id, "üëá".format(message.from_user), reply_markup=markup)



@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':

        if message.text == '–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤':
            bot.send_message(message.chat.id, '–ó–∞—Å–Ω–æ–≤–Ω–∏–∫ @yura_krykh\n–í–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /support —è–∫—à–æ –≤–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏')

        elif message.text == '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –ø—Ä–æ–µ–∫—Ç—É':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            info = types.KeyboardButton('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—ñ–¥—Ç—Ä–∏–º–∫—É')
            info2 = types.KeyboardButton('–î–æ–Ω–∞—Ç–∏–∫')
            back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
            markup.add(info)
            markup.add(info2)
            markup.add(back)
            bot.send_message(message.chat.id, "–ë—É–¥–µ–º–æ —Ä–∞–¥—ñ, —è–∫—â–æ –≤–∏ –ø—ñ–¥—Ç—Ä–∏–º–∞—î—Ç–µ –ø—Ä–æ–µ–∫—Çü•π", reply_markup=markup)

        elif message.text == '–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—ñ–¥—Ç—Ä–∏–º–∫—É':
            bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç, –º–∏ –∑–±–∏—Ä–∞—î–º–æ —Å—É–º—É –¥–ª—è –æ—Ä–µ–Ω–¥–∏ —Å–µ—Ä–≤–µ—Ä–∞, –Ω–∞ —è–∫–æ–º—É –±—É–¥–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–∞—à –±–æ—Ç, –ø–∞–º º—è—Ç–∞–π—Ç–µ –¥–æ–Ω–∞—Ç –Ω–µ —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º, –∞–ª–µ —Ü–µ —Å–∏–ª—å–Ω–æ –¥–æ–ø–æ–º–æ–∂–µ –ø–æ–ª–µ–≥—à–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞–º —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞—à—É –ø—Ä–∞—Ü—é, –¥—è–∫—É—î–º–æ –≤—Å—ñ–º, –Ω—É —ñ –∑–≤—ñ—Å–Ω–æ –Ω–∞–≥–∞–¥—É—î–º–æ —â–æ –º–∞–ª–µ–Ω—å–∫–∏—Ö –¥–æ–Ω–∞—Ç—ñ–≤ –Ω–µ –±—É–≤–∞—î)")

        elif message.text == '–î–æ–Ω–∞—Ç–∏–∫':
            bot.send_message(message.chat.id, "–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –±–∞–Ω–∫—É\nhttps://send.monobank.ua/jar/9qjTL2dtrB\n–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ –±–∞–Ω–∫–∏\n5375 4112 0659 5113")

        elif message.text == '–î–æ–¥–∞—Ç–∏ –¥–æ–º–∞—à–∫—É':
            user_id = message.from_user.id
            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
            cursor.execute(f"SELECT roli FROM login_id WHERE id = {user_id}")
            user_rol = cursor.fetchone()
            if user_rol:
                user_rol = user_rol[0]
                if user_rol == '—Å—Ç–∞—Ä–æ—Å—Ç–∞':
                    homework(message)
                else:
                    bot.send_message(message.chat.id, "–í–∏ –Ω–µ —î —Å—Ç–∞—Ä–æ—Å—Ç–æ—é, –≤–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Ü–∏–º –º–µ–Ω—é)")
                    message_handler_start(message)
            else:
                bot.send_message(message.chat.id, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö")
                message_handler_start(message)


        elif message.text == '–°—Ç–∞—Ä–æ—Å—Ç–∞–º':
            user_id = message.from_user.id
            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
            cursor.execute(f"SELECT roli FROM login_id WHERE id = {user_id}")
            user_rol = cursor.fetchone()
            if user_rol:
                user_rol = user_rol[0]
                if user_rol == '—Å—Ç–∞—Ä–æ—Å—Ç–∞':
                    menu_starostam(message)
                else:
                    bot.send_message(message.chat.id, "–í–∏ –Ω–µ —î —Å—Ç–∞—Ä–æ—Å—Ç–æ—é, –≤–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Ü–∏–º –º–µ–Ω—é)")
                    message_handler_start(message)
            else:
                bot.send_message(message.chat.id, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö")
                message_handler_start(message)

        elif message.text == '—è —Å—Ç–∞—Ä–æ—Å—Ç–∞' or message.text == "–Ø —Å—Ç–∞—Ä–æ—Å—Ç–∞":
            bot.send_message(message.chat.id, "–¢–∏ –ø—ñ–∑–¥—é–∫, –∞ –Ω–µ —Å—Ç–∞—Ä–æ—Å—Ç–∞üòè")

        elif message.text == '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥':
            user_id = message.from_user.id
            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
            cursor.execute(f"SELECT roli FROM login_id WHERE id = {user_id}")
            user_rol = cursor.fetchone()
            if user_rol:
                user_rol = user_rol[0]
                if user_rol == '—Å—Ç–∞—Ä–æ—Å—Ç–∞':
                    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item1 = types.KeyboardButton('–ü–æ–Ω–µ–¥—ñ–ª–æ–∫')
                    item2 = types.KeyboardButton('–í—ñ–≤—Ç–æ—Ä–æ–∫')
                    item3 =types.KeyboardButton('–°–µ—Ä–µ–¥–∞')
                    item4 = types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä')
                    item5 = types.KeyboardButton('–ü\'—è—Ç–Ω–∏—Ü—è')
                    back =types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
                    keyboard.add(back)
                    keyboard.add(item1, item2, item3, item4, item5)

                    bot.send_message(message.chat.id,"–û–±–µ—Ä—ñ—Ç—å –¥–µ–Ω—å, —É —è–∫–∏–π –≤–∏ –≤–Ω–µ—Å–µ—Ç–µ –∫–æ—Ä–µ–∫—Ü—ñ—é", reply_markup=keyboard)
                    bot.register_next_step_handler(message, redaguvanna,user_id)
                else:
                    bot.send_message(message.chat.id, "–í–∏ –Ω–µ —î —Å—Ç–∞—Ä–æ—Å—Ç–æ—é, –≤–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Ü–∏–º –º–µ–Ω—é)")
                    message_handler_start(message)

        elif message.text == '–î–æ–º–∞—à–∫–∞':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('–ü–µ—Ä–µ–≥–ª—è–¥ –¥–æ–º–∞—à–∫–∏')
            item2 = types.KeyboardButton('–í—ñ–¥–º—ñ—Ç–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–µ –¥–∑')
            item3 = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å:', reply_markup=markup)

        elif message.text == '–ü–µ—Ä–µ–≥–ª—è–¥ –¥–æ–º–∞—à–∫–∏':
            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
            cursor.execute(f"SELECT * FROM table_{message.chat.id}")
            rows = cursor.fetchall()
            if len(rows) == 0:
                bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ–º–∞—à–Ω—ñ—Ö –∑–∞–≤–¥–∞–Ω—å.")
            else:
                for row in rows:
                    subject = row[0]
                    text = row[1]
                    photo = row[2]
                    file = row[3]
                    caption = f"–ü—Ä–µ–¥–º–µ—Ç: {subject}\n–ü–æ—è—Å–Ω–µ–Ω–Ω—è: {text}"
                    bot.send_message(message.chat.id, caption)
            conn.close()

        elif message.text == '–í—ñ–¥–º—ñ—Ç–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–µ –¥–∑':
            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
          # –≤–∏–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ –∑ —Ç–∞–±–ª–∏—Ü—ñ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            cursor.execute(f"SELECT * FROM table_{message.chat.id}")
            rows = cursor.fetchall()
            if len(rows) == 0:
                # —è–∫—â–æ –≤ —Ç–∞–±–ª–∏—Ü—ñ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö, –≤–∏–≤–æ–¥–∏–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ–º–∞—à–Ω—ñ—Ö –∑–∞–≤–¥–∞–Ω—å.")
            else:
                # —Å—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
                keyboard = []
                # –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—å –ø–æ –∫–æ–∂–Ω–æ–º—É —Ä—è–¥–∫—É —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –¥–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –∑ —Ç–µ–∫—Å—Ç–æ–º –∑ –∫–æ–ª–æ–Ω–∫–∏ text
                for row in rows:
                    text = row[0]
                    keyboard.append([KeyboardButton(text)])
            # —Å—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ–∑–º—ñ—Ç–∫—É –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ä–∞–∑–æ–º –∑ –Ω–µ—é
                    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
                    reply_markup = json.dumps(reply_markup.to_dict())
            bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –≤–∏–∫–æ–Ω–∞–Ω–µ –¥–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è:", reply_markup=reply_markup)
                # –∑–∞–∫—Ä–∏–≤–∞—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
            conn.close()

        elif message.text == '‚úçÔ∏è–†–æ–∑–∫–ª–∞–¥ –ø–∞—Ä':
            user_id = message.chat.id
            rozklad_par_0(message, user_id)

        elif message.text == 'üìú–ü—Ä–æ—Ñ—ñ–ª—å':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            update_profile = types.KeyboardButton('üîß–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å')
            back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
            markup.add(update_profile, back)
            user_id = message.chat.id
            user_data = get_user_data(user_id)
            if user_data is not None:
                grypa, email, first_last = user_data
                profile_info = f"üìú–ü—Ä–æ—Ñ—ñ–ª—å\nüìö–ì—Ä—É–ø–∞: {grypa}\n‚úâÔ∏èEmail: {email}\nüë®‚Äçüéì–ü–Ü–ë: {first_last}"
                bot.send_message(message.chat.id, profile_info, reply_markup=markup)
            else:
                bot.send_message(message.chat.id, "–í–∞—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ(\n–ó–≤–µ—Ä–Ω–∏—Å—å –¥–æ /support!")

        elif message.text == 'üîß–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            up_email = types.KeyboardButton('üõ†üì®Email')
            up_grypa = types.KeyboardButton('üõ†üë•–ì—Ä—É–ø—É')
            up_firstlast = types.KeyboardButton("üõ†ü™™–ü–Ü–ë")
            back = types.KeyboardButton('üìú–ü—Ä–æ—Ñ—ñ–ª—å')
            markup.add(up_email, up_grypa, up_firstlast, back)
            bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å, —â–æ —Å–∞–º–µ —Ö–æ—á–µ—Ç–µ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏?üßê", reply_markup=markup)

        elif message.text == 'üõ†üì®Email':

            bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Ñ—ñ–∑–º–∞—Ç—ñ–≤—Å—å–∫—É –ø–æ—à—Ç—É:")
            bot.register_next_step_handler(message, update_email)

        elif message.text == 'üõ†üë•–ì—Ä—É–ø—É':
            keyboard2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('–°–û–§–Ü-11')
            item2 = types.KeyboardButton('–°–û–§–ê-12')
            item3 = types.KeyboardButton('–°–û–ú–Ü-13')
            item4 = types.KeyboardButton('–ö–ú-14')
            item5 = types.KeyboardButton('–°–û–Ü–ú-15')
            item6 = types.KeyboardButton('–Ü–Ü–ü-16')
            item7 = types.KeyboardButton('DA-17')
            item8 = types.KeyboardButton('–°–û–§–Ü-21')
            item9 = types.KeyboardButton('–°–û–ú–Ü-22')
            item10 = types.KeyboardButton('–°–û–Ü–ú-23')
            item11 = types.KeyboardButton('–°–û–§–ê-25')
            item12 = types.KeyboardButton('–ö–ù-26')
            item13 = types.KeyboardButton('–ö–ù-27')
            item14 = types.KeyboardButton('–°–û–§–Ü-31')
            item15 = types.KeyboardButton('–°–û–ú–Ü-32')
            item16 = types.KeyboardButton('–°–û–Ü–ú-33')
            item17 = types.KeyboardButton('–°–û–§–ê-35')
            item18 = types.KeyboardButton('–ö–ù-36')
            item19 = types.KeyboardButton('–°–û–§–Ü-41')
            item20 = types.KeyboardButton('–°–û–ú–Ü-42')
            item21 = types.KeyboardButton('–°–ûIM-43')
            item22 = types.KeyboardButton('–°–û–Ü–Ω—Å–∫-24')
            item23 = types.KeyboardButton('–º–°–û–§-11')
            item24 = types.KeyboardButton('–º–°–û–ú-12')
            item25 = types.KeyboardButton('–º–°–û–Ü–Ω-13')
            item26 = types.KeyboardButton('–º–°–û–§-21')
            item27 = types.KeyboardButton('–º–°–û–ú-22')
            item28 = types.KeyboardButton('–º–°–û–Ü–Ω-23')
            keyboard2.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13,
                          item14, item15, item16, item17, item18, item19, item20, item21, item22, item23, item24,
                          item25, item26, item27, item28)

            bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –≥—Ä—É–ø—É:", reply_markup=keyboard2)
            bot.register_next_step_handler(message, update_grypa)

        elif message.text == "üõ†ü™™–ü–Ü–ë":
            bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–µ –ü–Ü–ë:")
            bot.register_next_step_handler(message, update_first_last)

        elif message.text == '–ö–æ–Ω—Ç–∞–∫—Ç–∏ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤':
            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()

            cursor.execute("SELECT –í–∏–∫–ª–∞–¥–∞—á FROM Teachers")
            teachers = cursor.fetchall()


            keyboard = []
            for i in range(0, len(teachers), 3):
                row = []
                for j in range(i, min(i + 3, len(teachers))):
                    teacher_name = teachers[j][0]
                    row.append(InlineKeyboardButton(teacher_name, callback_data=teacher_name))
                keyboard.append(row)


            reply_markup = InlineKeyboardMarkup(keyboard)
            reply_markup = json.dumps(reply_markup.to_dict())

            conn.close()
            bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –≤–∏–∫–ª–∞–¥–∞—á–∞ –∑–∞ –ø—Ä—ñ–∑–≤–∏—â–µ–º —è–∫–æ–≥–æ —à—É–∫–∞—î—Ç–µ:",reply_markup=reply_markup)

        elif message.text == "–†–æ–±–æ—Ç–∞ –∑ –∂—É—Ä–Ω–∞–ª–æ–º":
            user_id = message.from_user.id
            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()
            cursor.execute(f"SELECT roli FROM login_id WHERE id = {user_id}")
            user_rol = cursor.fetchone()
            if user_rol:
                user_rol = user_rol[0]
                if user_rol == '—Å—Ç–∞—Ä–æ—Å—Ç–∞':
                    jurnal1(message)
                else:
                    bot.send_message(message.chat.id, "–í–∏ –Ω–µ —î —Å—Ç–∞—Ä–æ—Å—Ç–æ—é, –≤–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Ü–∏–º –º–µ–Ω—é)")
                    message_handler_start(message)
            else:
                bot.send_message(message.chat.id, "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö")
                message_handler_start(message)


        elif message.text == 'üîô–ù–∞–∑–∞–¥':
            message_handler_start(message)



def homework(message):
    user_id = message.chat.id
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute(f"SELECT grypa FROM login_id WHERE id = {user_id}")
    user_grypa = cursor.fetchone()[0]
    user_grypa = user_grypa.upper().replace('_', '-')

    db_filename = user_grypa + '_DOMASHKA.db'
    if os.path.exists(db_filename):  # 1_1234
        bot.send_message(message.chat.id, f"–û–±–µ—Ä—ñ—Ç—å –∑ —è–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç—É —Ö–æ—á–µ—Ç–µ –∑–∞–¥–∞—Ç–∏ –¥–æ—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è —Å–≤–æ—î—ó –≥—Ä—É–ø–∏ {user_grypa}")


    else:  # 2_1234
        bot.send_message(message.chat.id, f"–¢–∞–±–ª–∏—Ü—ñ —ñ–∑ –¥–æ–º–∞—à–Ω—ñ–º–∏ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏ –¥–ª—è —Ç–≤–æ—î—ó –≥—Ä—É–ø–∏ {user_grypa} —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω–æ, –¥–∞–≤–∞–π —è —Ç–æ–±—ñ –¥–æ–ø–æ–º–æ–∂—É —ó—Ö —Å—Ç–≤–æ—Ä–∏—Ç–∏üßë‚Äçüíª", reply_markup=telebot.types.ReplyKeyboardRemove())
        homework2_1(message,user_grypa)


def homework2_1(message,user_grypa):
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑ –Ω–∞–∑–≤–æ—é –≥—Ä—É–ø–∏
    conn = sqlite3.connect(f"{user_grypa}_DOMASHKA.db")
    cursor = conn.cursor()
    cursor.execute("CREATE TABLE IF NOT EXISTS –ü—Ä–µ–¥–º–µ—Ç–∏ (–ü—Ä–µ–¥–º–µ—Ç–∏ TEXT)")
    conn.commit()
    conn.close()

    db_filename = user_grypa + '.db'
    if os.path.exists(db_filename):
        conn1 = sqlite3.connect(f"{user_grypa}.db")
        cursor2 = conn1.cursor()
        cursor2.execute("SELECT –ü—Ä–µ–¥–º–µ—Ç–∏ FROM –ü—Ä–µ–¥–º–µ—Ç–∏")
        results = cursor2.fetchall()
        subjects = [row[0] for row in results]
        sub = ", ".join(subjects)
        conn1.close()
        bot.send_message(message.chat.id,f"–í–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –æ—Å—å —Ü—ñ –Ω–∞–≤—á–∞–ª—å–Ω—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏ —ñ–∑ –∂—É—Ä–Ω–∞–ª—É –∑ –æ—Ü—ñ–Ω–∫–∞–º–∏\n\n<code>{sub}</code>\n\n–ù–∞–¥—ñ—à–ª—ñ—Ç—å —á–µ—Ä–µ–∑ –∫–æ–º—É)))",parse_mode=ParseMode.HTML)
        bot.register_next_step_handler(message, homework2_2, user_grypa)

    else:
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ –≤—Å—ñ —Å–≤–æ—ó –Ω–∞–≤—á–∞–ª—å–Ω—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏ –∑–∞ —Ç–∞–∫–∏–º –∑—Ä–∞–∑–∫–æ–º\n\n<code>–ê–ª–≥–µ–±—Ä–∞, –§—ñ–∑–∏–∫–∞, –Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞, –Ü–Ω–æ–∑–µ–º–Ω–∞ –º–æ–≤–∞, –§—ñ–∑—Ä–∞, –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞</code>\n\n–¢–æ–±—Ç–æ —á–µ—Ä–µ–∑ –∫–æ–º—É))", parse_mode=ParseMode.HTML)
        bot.register_next_step_handler(message, homework2_2, user_grypa)

def homework2_2(message,user_grypa):
    predmety = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–¢–∞–∫ –≤—Å–µ –≤—ñ—Ä–Ω–æ')
    item2 = types.KeyboardButton('–†–µ–¥–∞–≥—É–≤–∞—Ç–∏')
    markup.add(item1)
    markup.add(item2)
    bot.send_message(message.chat.id, "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –≤–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ —É—Å—ñ –Ω–∞–≤—á–∞–ª—å–Ω—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏",reply_markup=markup)
    bot.send_message(message.chat.id, f"<code>{predmety}</code>", parse_mode=ParseMode.HTML)
    bot.register_next_step_handler(message,homework2_3,user_grypa,predmety)
    
def homework2_3(message, user_grypa,predmety):
    vidpovid = message.text

    if vidpovid == '–¢–∞–∫ –≤—Å–µ –≤—ñ—Ä–Ω–æ':

        bot.send_message(message.chat.id, "–ó–±–µ—Ä—ñ–≥–∞—é –≤–∞—à—ñ –ø—Ä–µ–¥–º–µ—Ç–∏...", reply_markup=telebot.types.ReplyKeyboardRemove())
        time.sleep(2)
        homework2_4(message,user_grypa,predmety)

    elif vidpovid == '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏':
        bot.send_message(message.chat.id,"–ë—É–¥—å –ª–∞—Å–∫–∞ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —â–µ —Ä–∞–∑ –≤–∞—à—ñ –Ω–∞–≤—á–∞–ª—å–Ω—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏ —ñ –ø–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è —á–∏ –≤—Å–µ –≤—ñ—Ä–Ω–æ)", reply_markup=telebot.types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, homework2_2, user_grypa)


def homework2_4(message, user_grypa,predmety):
    subjects = predmety.split(', ')  # –†–æ–∑–¥—ñ–ª—è—î–º–æ —Ä—è–¥–æ–∫ –∑–∞ –∫–æ–º–∞–º–∏

    conn = sqlite3.connect(f"{user_grypa}_DOMASHKA.db")
    cursor = conn.cursor()

    for subject in subjects:
        cursor.execute("INSERT INTO –ü—Ä–µ–¥–º–µ—Ç–∏ (–ü—Ä–µ–¥–º–µ—Ç–∏) VALUES (?)", (subject,))

    conn.commit()
    bot.send_message(message.chat.id, "–°—Ç–≤–æ—Ä—é—é —Ç–∞–±–ª–∏—Ü—ñ –∑ –≤–∞—à–∏–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏...")
    time.sleep(2)
    homework2_5(message, user_grypa)

def homework2_5(message, user_grypa):
    conn = sqlite3.connect(f"{user_grypa}_DOMASHKA.db")
    cursor = conn.cursor()
    cursor.execute("SELECT –ü—Ä–µ–¥–º–µ—Ç–∏ FROM –ü—Ä–µ–¥–º–µ—Ç–∏")
    result = cursor.fetchall()
    result = [(item[0].replace(" ", "_"),) for item in result]
    for row in result:
        pre = row[0]
        cursor.execute(
            f'CREATE TABLE "{pre}" ("id" TEXT, username TEXT)'
        )
        cursor.execute(
            f'CREATE TABLE "{pre}_dz" ("–ó–∞–≤–¥–∞–Ω–Ω—è" TEXT, –§–û–¢–û_1 BLOB, –§–û–¢–û_2 BLOB, –§–û–¢–û_3 BLOB, –§–ê–ô–õ_1 BLOB, –§–ê–ô–õ_2 BLOB, –§–ê–ô–õ_3 BLOB, –ö–û–õ–ò_–ó–ê–î–ê–ù–û TEXT, –î–û–ö–ò_–ê–ö–¢–£–ê–õ–¨–ù–ê TEXT, –î–ê–¢–ê_–í–ò–î–ê–õ–ï–ù–ù–Ø TEXT)'
        )
    bot.send_message(message.chat.id, "–í—Å–µ –≥–æ—Ç–æ–≤–æ")
    message_handler_start(message)





























def jurnal1(message):
    user_id = message.chat.id
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute(f"SELECT grypa FROM login_id WHERE id = {user_id}")
    user_grypa = cursor.fetchone()[0]
    user_grypa = user_grypa.upper().replace('_', '-')

    db_filename = user_grypa + '.db'
    if os.path.exists(db_filename):                 #1_1234
        bot.send_message(message.chat.id,f"–ñ—É—Ä–Ω–∞–ª –≥—Ä—É–ø–∏ {user_grypa} –≤–∂–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π.")
        jurnal1_1(message)

    else:                                           #2_1234
        bot.send_message(message.chat.id,f"–î–∞–≤–∞–π—Ç–µ —è –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∂—É—Ä–Ω–∞–ª –¥–ª—è –≤–∞—à–æ—ó –≥—Ä—É–ø–∏ {user_grypa}",reply_markup=telebot.types.ReplyKeyboardRemove())
        jurnal2_1(message, user_grypa)



def jurnal1_1(message):
    user_id = message.chat.id
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute(f"SELECT grypa FROM login_id WHERE id = {user_id}")
    user_grypa = cursor.fetchone()[0]
    user_grypa = user_grypa.upper().replace('_', '-')

    db_filename = user_grypa + '.db'
    conn.close()
    jurnal1_2(message, db_filename, user_grypa)
def jurnal1_2(message,db_filename,user_grypa):
    conn = sqlite3.connect(f'{db_filename}')
    cursor = conn.cursor()
    cursor.execute('SELECT –ü—Ä–µ–¥–º–µ—Ç–∏ FROM –ü—Ä–µ–¥–º–µ—Ç–∏')
    result = cursor.fetchall()

    keyboard = []
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for row in result:
        subject = row[0]
        keyboard.append(subject)
        markup.add(types.KeyboardButton(subject))

    markup.add(types.KeyboardButton('üîô–ù–∞–∑–∞–¥'))
    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –∂—É—Ä–Ω–∞–ª –ø—Ä–µ–¥–º–µ—Ç—É –∑ —è–∫–∏–º –≤–∏ —Ö–æ—á–µ—Ç–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏:", reply_markup=markup)
    bot.register_next_step_handler(message, jurnal1_3, db_filename,user_grypa,keyboard)
    conn.close()
def jurnal1_3(message,db_filename,user_grypa,keyboard):
    subject = message.text
    if subject == 'üîô–ù–∞–∑–∞–¥':
        message_handler_start(message)
    elif subject not in keyboard:
        bot.send_message(message.chat.id, "–í–∏ –≤–∏–±—Ä–∞–ª–∏ –Ω–µ –≤—ñ—Ä–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç")
        jurnal1_2(message,db_filename,user_grypa)

    elif subject.startswith('/'):
        bot.send_message(message.chat.id, "–í–∏ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É –±—É–¥—å –ª–∞—Å–∫–∞ –æ–±–µ—Ä—ñ—Ç—å –ø—Ä–µ–¥–º–µ—Ç:")
        jurnal1_2(message, db_filename, user_grypa)

    elif subject in keyboard:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–ú–æ–¥—É–ª—å 1')
        item2 = types.KeyboardButton('–ú–æ–¥—É–ª—å 2')
        item3 = types.KeyboardButton('–Ü–Ω—à–µ')
        back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
        markup.add(back)
        markup.add(item1)
        markup.add(item2)
        markup.add(item3)

        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å, —Ä–æ–∑–¥—ñ–ª:",reply_markup=markup)
        bot.register_next_step_handler(message, jurnal1_4, db_filename, user_grypa, subject)
def jurnal1_4(message,db_filename,user_grypa,subject):
    subject = subject.replace(" ", "_")
    table = message.text
    if table == 'üîô–ù–∞–∑–∞–¥':
        message_handler_start(message)

    elif table.startswith('/'):
        bot.send_message(message.chat.id, "–í–∏ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É –±—É–¥—å –ª–∞—Å–∫–∞ –æ–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª, —è–∫–∏–π —Ö–æ—á–µ—Ç–µ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏")
        jurnal1_3(message, db_filename, user_grypa,subject)



    elif table in ['–ú–æ–¥—É–ª—å 1', '–ú–æ–¥—É–ª—å 2', '–Ü–Ω—à–µ']:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–î–æ–¥–∞—Ç–∏ –æ—Ü—ñ–Ω–∫—É')
        item2 = types.KeyboardButton('–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –Ω–∞–∑–≤—É —Ç–µ–º–∏')
        item3 = types.KeyboardButton('–î–æ–¥–∞—Ç–∏ —Ç–µ–º—É')
        back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
        markup.add(back)
        markup.add(item1)
        markup.add(item2)
        markup.add(item3)
        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å, —â–æ —Å–∞–º–µ –≤–∏ —Ö–æ—á–µ—Ç–µ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≤ –∂—É—Ä–Ω–∞–ª—ñ:", reply_markup=markup)
        if table == '–ú–æ–¥—É–ª—å 1':
            table = '1'
        elif table == '–ú–æ–¥—É–ª—å 2':
            table = '2'
        elif table == '–Ü–Ω—à–µ':
            table = "3"

        bot.register_next_step_handler(message, jurnal1_5, db_filename, user_grypa, subject, table)
def jurnal1_5(message, db_filename, user_grypa, subject, table):
    if message.text == 'üîô–ù–∞–∑–∞–¥':
        message_handler_start(message)

    elif message.text == '–î–æ–¥–∞—Ç–∏ –æ—Ü—ñ–Ω–∫—É':
        conn = sqlite3.connect(db_filename)
        cursor = conn.cursor()

        # –§–æ—Ä–º—É—î–º–æ –Ω–∞–∑–≤—É —Ç–∞–±–ª–∏—Ü—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ {subject}_{table}
        table_name = f'{subject}_{table}'

        # –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞–∑–≤–∏ —Å—Ç–æ–≤–ø—Ü—ñ–≤ —Ç–∞–±–ª–∏—Ü—ñ
        cursor.execute(f"PRAGMA table_info({table_name})")
        columns = cursor.fetchall()
        column_names = [column[1] for column in columns if column[1] != '–°—Ç—É–¥–µ–Ω—Ç–∏' and column[1] != '–º–æ–¥—É–ª—å 1']

        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –∑—ñ —Å–ø–∏—Å–∫—É column_names
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        for column_name in column_names:
            markup.add(column_name)
        markup.add(types.KeyboardButton('üîô–ù–∞–∑–∞–¥'))

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É –≤ —è–∫—É —Ö–æ—á–µ—Ç–µ –≤–Ω–µ—Å—Ç–∏ –æ—Ü—ñ–Ω–∫–∏:", reply_markup=markup)
        bot.register_next_step_handler(message, jurnal1_5_1, db_filename, user_grypa, table_name ,column_names)
        conn.close()#1_5_1

    elif message.text == '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –Ω–∞–∑–≤—É —Ç–µ–º–∏':
        conn = sqlite3.connect(db_filename)
        cursor = conn.cursor()

        # –§–æ—Ä–º—É—î–º–æ –Ω–∞–∑–≤—É —Ç–∞–±–ª–∏—Ü—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ {subject}_{table}
        table_name = f'{subject}_{table}'

        # –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞–∑–≤–∏ —Å—Ç–æ–≤–ø—Ü—ñ–≤ —Ç–∞–±–ª–∏—Ü—ñ
        cursor.execute(f"PRAGMA table_info({table_name})")
        columns = cursor.fetchall()
        column_names = [column[1] for column in columns if column[1] != '–°—Ç—É–¥–µ–Ω—Ç–∏' and column[1] != '–º–æ–¥—É–ª—å 1' and column[1] != '–º–æ–¥—É–ª—å 2']

        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –∑—ñ —Å–ø–∏—Å–∫—É column_names
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        for column_name in column_names:
            markup.add(column_name)
        markup.add(types.KeyboardButton('üîô–ù–∞–∑–∞–¥'))

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É, —è–∫—É –≤–∏ —Ö–æ—á–µ—Ç–µ –≤—ñ–¥—Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏:", reply_markup=markup)

        conn.close()
    elif message.text == '–î–æ–¥–∞—Ç–∏ —Ç–µ–º—É':
        bot.send_message(message.chat.id,"–§—É–Ω–∫—Ü—ñ—è –ø–æ–∫–∏—â–æ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞, –∞–ª–µ –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ 10 —Ç–µ–º, —è–∫—ñ –≤–∏ –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏")
def jurnal1_5_1(message, db_filename, user_grypa,  table_name,column_names):
    tema = message.text
    if tema == 'üîô–ù–∞–∑–∞–¥':
        message_handler_start(message)

    elif tema in column_names:
        bot.send_message(message.chat.id,"–ë—É–¥—å –ª–∞—Å–∫–∞ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –≤–∞—à–æ—ó –≥—Ä—É–ø–∏ —ó—Ö–Ω—î –ø–æ–≤–Ω–µ —ñ–º\'—è.\n–ó–∞ —Ç–∞–∫–∏–º –∑—Ä–∞–∑–∫–æ–º‚¨áÔ∏è\n–¢–∞–∫–æ–∂ —è –Ω–∞–¥—ñ—à–ª—é –≤–∞–º —Å–ø–∏—Å–æ–∫ –≤–∞—à–æ—ó –≥—Ä—É–ø–∏, –¥–ª—è –∑—Ä—É—á–Ω—ñ—à–æ–≥–æ –≤–∏—Å—Ç–∞–≤–ª–µ–Ω–Ω—è –æ—Ü—ñ–Ω–æ–∫")
        bot.send_message(message.chat.id,"–ü–Ü–ü(–û–¥–Ω–æ–≥—Ä—É–ø–Ω–∏–∫–∞) - –æ—Ü—ñ–Ω–∫–∞\n–ü–Ü–ü(–û–¥–Ω–æ–≥—Ä—É–ø–Ω–∏–∫–∞) - –æ—Ü—ñ–Ω–∫–∞\n–ü–Ü–ü(–û–¥–Ω–æ–≥—Ä—É–ø–Ω–∏–∫–∞) - –æ—Ü—ñ–Ω–∫–∞")
        conn = sqlite3.connect(db_filename)
        cursor = conn.cursor()

        # –í–∏—Ç—è–≥—É—î–º–æ –≤—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∑—ñ —Å—Ç–æ–≤–ø—Ü—è "–°—Ç—É–¥–µ–Ω—Ç–∏" —Ç–∞–±–ª–∏—Ü—ñ "STUDENTY"
        cursor.execute("SELECT –°—Ç—É–¥–µ–Ω—Ç–∏ FROM STUDENTY")
        students = cursor.fetchall()

        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑—ñ —Å–ø–∏—Å–∫–æ–º —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤
        students_list = "\n".join([student[0] for student in students])

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑—ñ —Å–ø–∏—Å–∫–æ–º —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ —É –±–æ—Ç–∞
        bot.send_message(message.chat.id, f"<code>{students_list}</code>", parse_mode=ParseMode.HTML)
        conn.close()
        bot.register_next_step_handler(message,jurnal1_5_2, db_filename, user_grypa,  table_name,tema)
def jurnal1_5_2(message, db_filename, user_grypa, table_name, tema):
    text = message.text
    conn = sqlite3.connect(db_filename)
    cursor = conn.cursor()
    rows = text.split("\n")
    for row in rows:
        student_data = row.split(" - ")
        if len(student_data) == 2:
            name, grade = student_data
            cursor.execute(
                f"UPDATE {table_name} SET [{tema}] = ? WHERE –°—Ç—É–¥–µ–Ω—Ç–∏ = ?",
                (grade, name))

    conn.commit()
    conn.close()
    bot.send_message(message.chat.id, "–î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.")

###########################################################

def jurnal2_1(message, user_grypa):
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑ –Ω–∞–∑–≤–æ—é –≥—Ä—É–ø–∏
    conn = sqlite3.connect(f"{user_grypa}.db")
    cursor = conn.cursor()

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ STUDENTY
    cursor.execute("CREATE TABLE IF NOT EXISTS STUDENTY (–°—Ç—É–¥–µ–Ω—Ç–∏ TEXT)")

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –ü—Ä–µ–¥–º–µ—Ç–∏
    cursor.execute("CREATE TABLE IF NOT EXISTS –ü—Ä–µ–¥–º–µ—Ç–∏ (–ü—Ä–µ–¥–º–µ—Ç–∏ TEXT, –ó–∞–∫—Ä–∏—Ç–∏–π_–º–æ–¥—É–ª—å_1 TEXT, –ó–∞–∫—Ä–∏—Ç–∏–π_–º–æ–¥—É–ª—å_2 TEXT)")

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    conn.commit()

    # –ó–∞–∫—Ä–∏—Ç—Ç—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    conn.close()
    bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –≤–∞—à–æ—ó –≥—Ä—É–ø–∏ –∑–∞ —Ç–∞–∫–∏–º –∑—Ä–∞–∑–∫–æ–º", reply_markup=None)
    bot.send_message(message.chat.id, "–ü—Ä—ñ–∑–≤–∏—â–µ —ñ–º'—è –ø–æ-–±–∞—Ç—å–∫–æ–≤—ñ\n–ü—Ä—ñ–∑–≤–∏—â–µ —ñ–º'—è –ø–æ-–±–∞—Ç—å–∫–æ–≤—ñ\n–ü—Ä—ñ–∑–≤–∏—â–µ —ñ–º'—è –ø–æ-–±–∞—Ç—å–∫–æ–≤—ñ\n–ü—Ä—ñ–∑–≤–∏—â–µ —ñ–º'—è –ø–æ-–±–∞—Ç—å–∫–æ–≤—ñ\n–ü—Ä—ñ–∑–≤–∏—â–µ —ñ–º'—è –ø–æ-–±–∞—Ç—å–∫–æ–≤—ñ")
    bot.register_next_step_handler(message, jurnal2_2, user_grypa)

def jurnal2_2(message, user_grypa):
    text = message.text
    # –í–∏–¥–∞–ª—è—î–º–æ —Ü–∏—Ñ—Ä–∏ –∑ —Ç–µ–∫—Å—Ç—É
    text = ''.join(filter(lambda x: not x.isdigit(), text))

    # –ó–Ω–∞–∫–∏, —è–∫—ñ –º–∏ —Ö–æ—á–µ–º–æ –≤–∏–¥–∞–ª–∏—Ç–∏
    characters_to_remove = '().:;,+#*$&?!`~"'

    # –í–∏–¥–∞–ª—è—î–º–æ –∑–Ω–∞–∫–∏ –∑ —Ç–µ–∫—Å—Ç—É
    for char in characters_to_remove:
        text = text.replace(char, '')

    jurnal2_3(message, user_grypa,text)

def jurnal2_3(message,user_grypa,text):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–¢–∞–∫ –≤—Å–µ –≤—ñ—Ä–Ω–æ')
    item2 = types.KeyboardButton('–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Å–ø–∏—Å–æ–∫')
    markup.add(item1)
    markup.add(item2)
    bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –≤–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –º–µ–Ω—ñ —Å–ø–∏—Å–æ–∫ —Å–≤–æ—ó—Ö –æ–¥–Ω–æ–≥—Ä—É–ø–Ω–∏–∫—ñ–≤".format(message.from_user), reply_markup=markup)
    bot.register_next_step_handler(message,jurnal2_4,user_grypa,text)

def jurnal2_4(message,user_grypa,text):
    vid = message.text


    if vid == '–¢–∞–∫ –≤—Å–µ –≤—ñ—Ä–Ω–æ':

        bot.send_message(message.chat.id, "–í–Ω–æ—à—É –≤ –±–∞–∑—É...", reply_markup=telebot.types.ReplyKeyboardRemove())
        time.sleep(2)
        jurnal2_5(message, user_grypa, text)

    elif vid == '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Å–ø–∏—Å–æ–∫':
        jurnal2_1(message, user_grypa)

    #–í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å

def jurnal2_5(message,user_grypa,text):
    conn = sqlite3.connect(f"{user_grypa}.db")
    cursor = conn.cursor()

    rows = text.split('\n')  # –†–æ–∑–¥—ñ–ª—è—î–º–æ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—è–¥–∫–∏

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ —Ä—è–¥–∫–∏ —Ç–∞ —Å–æ—Ä—Ç—É—î–º–æ —Ä—è–¥–∫–∏ –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º
    rows = [row.strip() for row in rows if row.strip()]
    rows.sort()

    for row in rows:
        cursor.execute("INSERT INTO STUDENTY (–°—Ç—É–¥–µ–Ω—Ç–∏) VALUES (?)", (row,))

    conn.commit()
    bot.send_message(message.chat.id, "–ó–±–µ—Ä–µ–∂–µ–Ω–æ‚úÖ")
    bot.send_message(message.chat.id, "–ê —Ç–µ–ø–µ—Ä –ø–µ—Ä–µ–π–¥–µ–º–æ –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∂—É—Ä–Ω–∞–ª—É –ø—Ä–µ–¥–º–µ—Ç—ñ–≤, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ –±—É–¥—å –ª–∞—Å–∫–∞ –ß–ï–†–ï–ó –ö–û–ú–£ –ø–æ–≤–Ω—ñ –Ω–∞–∑–≤–∏ —Å–≤–æ—ó—Ö –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω —Ü—å–æ–≥–æ —Å–µ–º–µ—Å—Ç—Ä—É.\n–ù–∞–¥—Å–∏–ª–∞—Ç–∏ –ü–Ü–ü –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤, —è–∫—ñ –≤–µ–¥—É—Ç—å —É –≤–∞—Å —Ü–µ–π –ø—Ä–µ–¥–º–µ—Ç, –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æü´†")
    bot.register_next_step_handler(message, jurnal2_6, user_grypa)

def jurnal2_6(message,user_grypa):
    pred = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–¢–∞–∫ –≤—Å–µ –≤—ñ—Ä–Ω–æ')
    item2 = types.KeyboardButton('–†–µ–¥–∞–≥—É–≤–∞—Ç–∏')
    markup.add(item1)
    markup.add(item2)
    bot.send_message(message.chat.id, "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –≤–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ —É—Å—ñ –Ω–∞–≤—á–∞–ª—å–Ω—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏", reply_markup=markup)
    bot.send_message(message.chat.id, f"<code>{pred}</code>", parse_mode=ParseMode.HTML)
    bot.register_next_step_handler(message, jurnal2_7 ,user_grypa, pred)

def jurnal2_7(message,user_grypa, pred):
    vid = message.text

    if vid == '–¢–∞–∫ –≤—Å–µ –≤—ñ—Ä–Ω–æ':

        bot.send_message(message.chat.id, "–ó–±–µ—Ä—ñ–≥–∞—é –≤–∞—à—ñ –ø—Ä–µ–¥–º–µ—Ç–∏...", reply_markup=telebot.types.ReplyKeyboardRemove())
        time.sleep(2)
        jurnal2_8(message, user_grypa, pred)


    elif vid == '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏':
        bot.send_message(message.chat.id,"–ë—É–¥—å –ª–∞—Å–∫–∞ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —â–µ —Ä–∞–∑ –≤–∞—à—ñ –Ω–∞–≤—á–∞–ª—å–Ω—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏ —ñ –ø–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è —á–∏ –≤—Å–µ –≤—ñ—Ä–Ω–æ)", reply_markup=telebot.types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message,jurnal2_6, user_grypa)

def jurnal2_8(message,user_grypa, pred):
    subjects = pred.split(', ')  # –†–æ–∑–¥—ñ–ª—è—î–º–æ —Ä—è–¥–æ–∫ –∑–∞ –∫–æ–º–∞–º–∏

    conn = sqlite3.connect(f"{user_grypa}.db")
    cursor = conn.cursor()

    for subject in subjects:
        cursor.execute("INSERT INTO –ü—Ä–µ–¥–º–µ—Ç–∏ (–ü—Ä–µ–¥–º–µ—Ç–∏) VALUES (?)", (subject,))

    conn.commit()
    bot.send_message(message.chat.id, "–°—Ç–≤–æ—Ä—é—é —Ç–∞–±–ª–∏—Ü—ñ –∑ –≤–∞—à–∏–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏...")
    jurnal2_9(message, user_grypa)

def jurnal2_9(message,user_grypa):

    conn = sqlite3.connect(f"{user_grypa}.db")
    cursor = conn.cursor()
    cursor.execute("SELECT –ü—Ä–µ–¥–º–µ—Ç–∏ FROM –ü—Ä–µ–¥–º–µ—Ç–∏")
    result = cursor.fetchall()
    result = [(item[0].replace(" ", "_"),) for item in result]

    cursor.execute("SELECT –°—Ç—É–¥–µ–Ω—Ç–∏ FROM STUDENTY")
    students = cursor.fetchall()

    for row in result:
        pre = row[0]
        cursor.execute(
            f'CREATE TABLE "{pre}_1" ("–°—Ç—É–¥–µ–Ω—Ç–∏" TEXT, [–º–æ–¥—É–ª—å 1] REAL, [—Ç–µ–º–∞ 0] TEXT, [—Ç–µ–º–∞ 1] TEXT, [—Ç–µ–º–∞ 2] TEXT, [—Ç–µ–º–∞ 3] TEXT, [—Ç–µ–º–∞ 4] TEXT, [—Ç–µ–º–∞ 5] TEXT, [—Ç–µ–º–∞ 6] TEXT, [—Ç–µ–º–∞ 7] TEXT, [—Ç–µ–º–∞ 8] TEXT, [—Ç–µ–º–∞ 9] TEXT)'
        )
        cursor.execute(
            f'CREATE TABLE "{pre}_2" ("–°—Ç—É–¥–µ–Ω—Ç–∏" TEXT, [–º–æ–¥—É–ª—å 2] REAL, [—Ç–µ–º–∞ 0] TEXT, [—Ç–µ–º–∞ 1] TEXT, [—Ç–µ–º–∞ 2] TEXT, [—Ç–µ–º–∞ 3] TEXT, [—Ç–µ–º–∞ 4] TEXT, [—Ç–µ–º–∞ 5] TEXT, [—Ç–µ–º–∞ 6] TEXT, [—Ç–µ–º–∞ 7] TEXT, [—Ç–µ–º–∞ 8] TEXT, [—Ç–µ–º–∞ 9] TEXT)'
        )
        cursor.execute(
            f'CREATE TABLE "{pre}_3" ("–°—Ç—É–¥–µ–Ω—Ç–∏" TEXT, [–º–æ–¥—É–ª—å 1] REAL, [–º–æ–¥—É–ª—å 2] REAL, [—ñ–Ω–¥–∑] INTEGER, [–ø—ñ–¥—Å—É–º–∫–æ–≤–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å] INTEGER, [–∑–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞–ª—ñ–≤] REAL)'
        )

        for student in students:
            cursor.execute(f"INSERT INTO \"{pre}_1\" (\"–°—Ç—É–¥–µ–Ω—Ç–∏\") VALUES (?)", (str(student[0]),))
            cursor.execute(f"INSERT INTO \"{pre}_2\" (\"–°—Ç—É–¥–µ–Ω—Ç–∏\") VALUES (?)", (str(student[0]),))
            cursor.execute(f"INSERT INTO \"{pre}_3\" (\"–°—Ç—É–¥–µ–Ω—Ç–∏\") VALUES (?)", (str(student[0]),))

    conn.commit()
    conn.close()
    bot.send_message(message.chat.id, "–¢–∞–±–ª–∏—Ü—ñ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ‚úÖ")
    message_handler_start(message)

def redaguvanna(message,user_id):
    den = message.text
    if den == "üîô–ù–∞–∑–∞–¥":
        message_handler_start(message)
    elif den not in ['–ü–æ–Ω–µ–¥—ñ–ª–æ–∫','–í—ñ–≤—Ç–æ—Ä–æ–∫','–°–µ—Ä–µ–¥–∞','–ß–µ—Ç–≤–µ—Ä','–ü\'—è—Ç–Ω–∏—Ü—è']:
        bot.send_message(user_id, "–í–∏ –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –¥–µ–Ω—å, –±—É–¥—å –ª–∞—Å–∫–∞ –≤–∏–±–µ—Ä—ñ—Ç—å –¥–µ–Ω—å —ñ–∑ –Ω–∞—è–≤–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫: ")
        bot.register_next_step_handler(message, redaguvanna, user_id)
    else:
        key = types.ReplyKeyboardMarkup(resize_keyboard=True)
        conn = sqlite3.connect('users.db')
        cursor = conn.cursor()
        cursor.execute(f"SELECT grypa FROM login_id WHERE id = {user_id}")
        user_grypa = cursor.fetchone()[0]
        back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
        key.add(back)
        bot.send_message(message.chat.id, f"–í–∏ –≤–∏–±—Ä–∞–ª–∏ {den}, –±—É–¥—å –ª–∞—Å–∫–∞ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –≤—ñ–¥—Ä–µ–¥–∞–≥–æ–≤–∞–Ω–∏–π —Ä–æ–∑–∫–ª–∞.\n–ó–ê –¢–ê–ö–ò–ú –ó–†–ê–ó–ö–û–ú!!!", reply_markup=key)
        #–ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –¥–æ–ø–∏—à–∏ —è–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—Å—Ç–∞–≤–ª—è—Ç–∏
        bot.send_message(message.chat.id,'–ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤–∏ –ø–∞—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —ó—Ö –ø–æ—Ä—è–¥–∫—É, —è–∫—â–æ —É –≤–∞—Å –≤—ñ–∫–Ω–æ —Ç–æ–±—Ç–æ –Ω–µ –º–∞—î –ø–∞—Ä–∏, —Ç–æ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏ —ó—ó –Ω—É–º–µ—Ä–∞—Ü—ñ—é, –∞–±–æ –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –ø—Ä–æ—á–µ—Ä–∫')
        redaguvanna2(message, user_id, user_grypa, den)


def redaguvanna2(message, user_id,user_grypa,den):
    days = ['–ü–æ–Ω–µ–¥—ñ–ª–æ–∫', '–í—ñ–≤—Ç–æ—Ä–æ–∫', '–°–µ—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä', '–ü\'—è—Ç–Ω–∏—Ü—è']
    den_123 = days.index(den)

    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    # –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫ –∑ —Ç–∞–±–ª–∏—Ü—ñ "rosklad_–°–û–Ü–ú_23"
    cursor.execute(f'SELECT * FROM rosklad_{user_grypa}')
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Ç—É (–ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫ —Ç–∞–±–ª–∏—Ü—ñ)
    first_row = cursor.fetchall()[den_123]

    mess = ''
    for j, item in enumerate(first_row):
        if item is not None:
            mess += f"{j + 1}. {item}\n"

    bot.send_message(user_id, f'\n<code>{mess}</code>', parse_mode=ParseMode.HTML)
    bot.register_next_step_handler(message, redaguvanna3, user_grypa, user_id, den_123)
    # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
    cursor.close()
    conn.close()

def redaguvanna3(message, user_grypa, user_id, den_123):
    text = message.text  # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:


        # –†–æ–∑–±–∏–≤–∞—î–º–æ —Ç–µ–∫—Å—Ç –Ω–∞ –æ–∫—Ä–µ–º—ñ —Ä—è–¥–∫–∏
        lines = text.split('\n')

        result = [None] * 5  # –†–µ–∑—É–ª—å—Ç–∞—Ç (–∫–æ—Ä—Ç–µ–∂) –∑ –ø–æ—á–∞—Ç–∫–æ–≤–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º None

        for line in lines:
            # –†–æ–∑–±–∏–≤–∞—î–º–æ —Ä—è–¥–æ–∫ –Ω–∞ —ñ–Ω–¥–µ–∫—Å —ñ –∑–Ω–∞—á–µ–Ω–Ω—è
            index, value = line.split('. ', 1)

            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ–Ω–¥–µ–∫—Å —î —á–∏—Å–ª–æ–º –≤—ñ–¥ 1 –¥–æ 5
            if index.isdigit() and 1 <= int(index) <= 5:
                result[int(index) - 1] = value

        # –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–∫–æ—Ä—Ç–µ–∂)
        result = tuple(result)
        bot.send_message(user_id, "–†–æ–∑–∫–ª–∞–¥ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω–æ")
        redaguvanna4(message, user_grypa, user_id, den_123, result )

    except Exception as e:
        bot.send_message(user_id, '–í–∏ –≤–≤–µ–ª–∏ –Ω–µ –ø–æ –∑—Ä–∞–∑–∫—É, –±—É–¥—å –ª–∞—Å–∫–∞ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —â–µ —Ä–∞–∑ –≤—ñ–¥—Ä–µ–¥–∞–≥–æ–≤–∞–Ω–∏–π —Ä–æ–∑–∫–ª–∞–¥ –∑–∞ –∑—Ä–∞–∑–∫–æ–º')
        bot.send_message(user_id,'<code>1. (–ù–∞–∑–≤–∞ –ø–∞—Ä–∏)\n2. (–ù–∞–∑–≤–∞ –ø–∞—Ä–∏)\n3. (–ù–∞–∑–≤–∞ –ø–∞—Ä–∏)\n4. (–ù–∞–∑–≤–∞ –ø–∞—Ä–∏)\n5. (–ù–∞–∑–≤–∞ –ø–∞—Ä–∏)</code>', parse_mode=ParseMode.HTML)
        bot.register_next_step_handler(message, redaguvanna3, user_grypa, user_id, den_123)

def redaguvanna4(message, user_grypa, user_id, den_123, result):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute(f'SELECT * FROM rosklad_{user_grypa}')
    rows = cursor.fetchall()
    rows[den_123] = result
    cursor.execute(f'DELETE FROM rosklad_{user_grypa}')
    cursor.executemany(f'INSERT INTO rosklad_{user_grypa} VALUES (?,?,?,?,?)', rows)
    conn.commit()
    cursor.close()
    conn.close()
    message_handler_start(message)

@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≤–∏–∫–ª–∞–¥–∞—á–∞ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM Teachers WHERE –í–∏–∫–ª–∞–¥–∞—á=?", (call.data,))
    teacher_info = cursor.fetchone()
    conn.close()

    # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤–∏–∫–ª–∞–¥–∞—á–∞
    teacher_name = teacher_info[0]
    phone_number = teacher_info[1]
    email = teacher_info[2]
    full_name = teacher_info[3]
    message_text = f"–í–∏–∫–ª–∞–¥–∞—á: {full_name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}\n–ü–æ—à—Ç–∞: {email}"

    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤–∏–∫–ª–∞–¥–∞—á–∞
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=message_text)

################################################################################################################################

def rozklad_par_0(message,user_id):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–°–û–§–Ü-11')
    item2 = types.KeyboardButton('–°–û–§–ê-12')
    item3 = types.KeyboardButton('–°–û–ú–Ü-13')
    item4 = types.KeyboardButton('–ö–ú-14')
    item5 = types.KeyboardButton('–°–û–Ü–ú-15')
    item6 = types.KeyboardButton('–Ü–Ü–ü-16')
    item7 = types.KeyboardButton('DA-17')
    item8 = types.KeyboardButton('–°–û–§–Ü-21')
    item9 = types.KeyboardButton('–°–û–ú–Ü-22')
    item10 = types.KeyboardButton('–°–û–Ü–ú-23')
    item11 = types.KeyboardButton('–°–û–§–ê-25')
    item12 = types.KeyboardButton('–ö–ù-26')
    item13 = types.KeyboardButton('–ö–ù-27')
    item14 = types.KeyboardButton('–°–û–§–Ü-31')
    item15 = types.KeyboardButton('–°–û–ú–Ü-32')
    item16 = types.KeyboardButton('–°–û–Ü–ú-33')
    item17 = types.KeyboardButton('–°–û–§–ê-35')
    item18 = types.KeyboardButton('–ö–ù-36')
    item19 = types.KeyboardButton('–°–û–§–Ü-41')
    item20 = types.KeyboardButton('–°–û–ú–Ü-42')
    item21 = types.KeyboardButton('–°–ûIM-43')
    item22 = types.KeyboardButton('–°–û–Ü–Ω—Å–∫-24')
    item23 = types.KeyboardButton('–º–°–û–§-11')
    item24 = types.KeyboardButton('–º–°–û–ú-12')
    item25 = types.KeyboardButton('–º–°–û–Ü–Ω-13')
    item26 = types.KeyboardButton('–º–°–û–§-21')
    item27 = types.KeyboardButton('–º–°–û–ú-22')
    item28 = types.KeyboardButton('–º–°–û–Ü–Ω-23')
    back = types.KeyboardButton('üîô–ù–∞–∑–∞–¥')
    keyboard.add(back)
    keyboard.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13,
                 item14, item15, item16, item17, item18, item19, item20, item21, item22, item23, item24,
                 item25, item26, item27, item28)
    bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—à—É –≥—Ä—É–ø—É:', reply_markup=keyboard)
    bot.register_next_step_handler(message, rozklad_par,user_id)

def rozklad_par(message,user_id):
    data = message.text
    if message.text == 'üîô–ù–∞–∑–∞–¥':
        message_handler_start(message)

    elif data not in ['–°–û–ú–Ü-32', '–°–û–Ü–ú-33', '–°–û–§–ê-35', '–ö–ù-36', '–º–°–û–§-11', '–º–°–û–ú-12', '–°–û–§–Ü-41', '–°–û–ú–Ü-42', '–°–ûIM-43',
          '–°–û–Ü–Ω—Å–∫-24', '–º–°–û–Ü–Ω-13', '–ö–ú-14', '–°–û–Ü–ú-15', '–Ü–Ü–ü-16', 'DA-17', '–°–û–§–Ü-21', '–°–û–§–Ü-21', '–°–û–ú–Ü-22',
          '–ö–ù-26', '–ö–ù-27', '–°–û–§–Ü-31', '–°–û–Ü–ú-23', '–°–û–§–ê-25', '–°–û–§–Ü-11', '–°–û–§–ê-12', '–°–û–ú–Ü-13', '–º–°–û–§-21', '–º–°–û–ú-22', '–º–°–û–Ü–Ω-23']:
        bot.send_message(message.chat.id, "–í–∏ –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É –≥—Ä—É–ø—É, –±—É–¥—å –ª–∞—Å–∫–∞ –≤–∏–±–µ—Ä—ñ—Ç—å –≥—Ä—É–ø—É —ñ–∑ –Ω–∞—è–≤–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫: ")
        bot.register_next_step_handler(message, rozklad_par,user_id)
    else:
        data = message.text.upper().replace('-', '_')
        bot.send_message(message.chat.id, "‚úÖ")
        rozklad_par2(message, data, user_id)

def rozklad_par2(message,data,user_id):

    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()
    cursor.execute(f"SELECT * FROM rosklad_{data}")
    dates = cursor.fetchall()
    days = ['–ü–æ–Ω–µ–¥—ñ–ª–æ–∫', '–í—ñ–≤—Ç–æ—Ä–æ–∫', '–°–µ—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä', '–ü`—è—Ç–Ω–∏—Ü—è']
    times = ['8:00-9:20', '9:35-10:55', '11:10-12:30', '12:45-14:05', '14:20-15:40']
    mess = ''
    for i, date in enumerate(dates):
        mess += days[i] + ':\n'
        for j, item in enumerate(date):
            if item is not None:
                mess += f"{times[j]} {j + 1}. {item}\n"
        mess += '\n'

    bot.send_message(user_id,"–†–æ–∑–∫–ª–∞–¥ –ø–∞—Ä –¥–ª—è –≥—Ä—É–ø–∏ " + data.replace('_', '-') + ':\n\n' + mess)
    bot.register_next_step_handler(message, rozklad_par,user_id )


def update_email(message):
    new_email = message.text
    user_id = message.from_user.id
    if new_email == "/start" or new_email == "/menu" or new_email == '/support' or new_email == '/homework' or new_email == '/idea' or new_email == '/shurik' or new_email == '/legion':
        bot.send_message(message.chat.id,'–í–∏ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É, –∞ –Ω–µ –ø–æ—à—Ç—É –±—É–¥—å –ª–∞—Å–∫–∞ –≤–≤–µ–¥—ñ—Ç—å –ø–æ—à—Ç—Éü•π')
        bot.register_next_step_handler(message, update_email)
    else:

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–≤–µ–¥–µ–Ω–∏–π email –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –Ω–∞ "@fizmat.tnpu.edu.ua"
        conn = sqlite3.connect('users.db')
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM Email_Base WHERE Email_Address=?", (new_email,))
        row = cursor.fetchone()
        if row:
            conn = sqlite3.connect('users.db')
            cursor = conn.cursor()

            cursor.execute("UPDATE login_id SET email=? WHERE id=?", (new_email, user_id))
            conn.commit()

            conn.close()
            bot.send_message(message.chat.id, "ü¶¶–ü–æ—à—Ç—É —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!")
            message_handler_start(message)
        else:
            # –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email
            bot.send_message(message.chat.id,
                             "üôÖ–í–≤–µ–¥–µ–Ω–∞ email –∞–¥—Ä–µ—Å–∞ –Ω–µ —î —Ñ—ñ–∑–º–∞—Ç—ñ–≤—Å—å–∫–æ—é. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —â–µ —Ä–∞–∑ —Å–≤–æ—é email –∞–¥—Ä–µ—Å—É")
            # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ —Ñ—É–Ω–∫—Ü—ñ—ó get_email –¥–ª—è –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –≤–≤–æ–¥—É –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

            bot.register_next_step_handler(message, update_email)

def update_grypa(message):
    new_grypa = message.text.upper().replace('-', '_')
    user_id = message.from_user.id
    if new_grypa == "/start" or new_grypa == "/menu" or new_grypa == '/support' or new_grypa == '/homework' or new_grypa == '/idea' or new_grypa == '/shurik' or new_grypa == '/legion':
        bot.send_message(message.chat.id, "–í–∏ –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É, –∞ –Ω–µ –≥—Ä—É–ø—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å –≥—Ä—É–ø—É —ñ–∑ –∫–Ω–æ–ø–æ–∫.")
        bot.register_next_step_handler(message, update_grypa)
    elif message.text in ['–°–û–ú–Ü-32','–°–û–Ü–ú-33', '–°–û–§–ê-35', '–ö–ù-36', '–º–°–û–§-11', '–º–°–û–ú-12', '–°–û–§–Ü-41', '–°–û–ú–Ü-42', '–°–û–Ü–ú-43',
                              '–°–û–Ü–Ω—Å–∫-24', '–º–°–û–Ü–Ω-13','–ö–ú-14', '–°–û–Ü–ú-15', '–Ü–Ü–ü-16','DA-17', '–°–û–§–Ü-21', '–°–û–§–Ü-21', '–°–û–ú–Ü-22', '–ö–ù-26',
                              '–ö–ù-27', '–°–û–§–Ü-31','–°–û–ú–Ü-23', '–°–û–§–ê-25', '–°–û–§–Ü-11', '–°–û–§–ê-12', '–°–û–ú–Ü-13',]:
        # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        conn = sqlite3.connect('users.db')
        cursor = conn.cursor()
        # –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä—É–ø–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        cursor.execute("UPDATE login_id SET grypa=? WHERE id=?", (new_grypa, user_id))
        conn.commit()
        # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø–∏—Ç–∞–Ω–Ω—è–º –ø—Ä–æ –Ω–æ–≤—É –≥—Ä—É–ø—É
        bot.send_message(message.chat.id, "ü¶¶–ì—Ä—É–ø–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
        # –ó–∞–∫—Ä–∏—Ç—Ç—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        conn.close()
        message_handler_start(message)
    else:
        bot.send_message(message.chat.id, "–í–∏ –≤–≤–µ–ª–∏ —â–æ—Å—å –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–µ –º–µ–Ω—ñ, –Ω–∞–ø–µ–≤–Ω–æ —Ü–µ –Ω–µ –≥—Ä—É–ø–∞(")
        bot.register_next_step_handler(message, update_grypa)

def update_first_last(message):
    new_first_last = message.text
    user_id = message.from_user.id
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    # –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä—ñ–∑–≤–∏—â–∞ —Ç–∞ —ñ–º–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    cursor.execute("UPDATE login_id SET first_last=? WHERE id=?", (new_first_last, user_id))
    conn.commit()
    # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    bot.send_message(message.chat.id, "ü¶¶–ü—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–º'—è –æ–Ω–æ–≤–ª–µ–Ω—ñ —É—Å–ø—ñ—à–Ω–æ!")
    # –ó–∞–∫—Ä–∏—Ç—Ç—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    conn.close()


bot.polling(none_stop=True)
